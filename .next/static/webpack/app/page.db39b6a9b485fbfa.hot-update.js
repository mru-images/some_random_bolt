"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MusicPlayerApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/home.js\");\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/search.js\");\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/settings.js\");\n/* harmony import */ var _components_HomePage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/HomePage */ \"(app-pages-browser)/./components/HomePage.tsx\");\n/* harmony import */ var _components_SearchPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/SearchPage */ \"(app-pages-browser)/./components/SearchPage.tsx\");\n/* harmony import */ var _components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/SettingsPage */ \"(app-pages-browser)/./components/SettingsPage.tsx\");\n/* harmony import */ var _components_PlaylistsPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/PlaylistsPage */ \"(app-pages-browser)/./components/PlaylistsPage.tsx\");\n/* harmony import */ var _components_LikedSongsPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/LikedSongsPage */ \"(app-pages-browser)/./components/LikedSongsPage.tsx\");\n/* harmony import */ var _components_MinimizedPlayer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/MinimizedPlayer */ \"(app-pages-browser)/./components/MinimizedPlayer.tsx\");\n/* harmony import */ var _components_MaximizedPlayer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/MaximizedPlayer */ \"(app-pages-browser)/./components/MaximizedPlayer.tsx\");\n/* harmony import */ var _components_CreatePlaylistModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/CreatePlaylistModal */ \"(app-pages-browser)/./components/CreatePlaylistModal.tsx\");\n/* harmony import */ var _components_AddToPlaylistModal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/AddToPlaylistModal */ \"(app-pages-browser)/./components/AddToPlaylistModal.tsx\");\n/* harmony import */ var _components_AuthWrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/components/AuthWrapper */ \"(app-pages-browser)/./components/AuthWrapper.tsx\");\n/* harmony import */ var _hooks_useAuth__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/hooks/useAuth */ \"(app-pages-browser)/./hooks/useAuth.ts\");\n/* harmony import */ var _hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/hooks/useSupabaseData */ \"(app-pages-browser)/./hooks/useSupabaseData.ts\");\n/* harmony import */ var _hooks_useQueue__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/hooks/useQueue */ \"(app-pages-browser)/./hooks/useQueue.ts\");\n/* harmony import */ var _components_ThemeContext__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/components/ThemeContext */ \"(app-pages-browser)/./components/ThemeContext.tsx\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MusicPlayerContent() {\n    _s();\n    const { user } = (0,_hooks_useAuth__WEBPACK_IMPORTED_MODULE_12__.useAuth)();\n    const { songs, playlists, likedSongs, lastPlayedSong, loading, toggleLike, createPlaylist, deletePlaylist, renamePlaylist, addSongToPlaylist, removeSongFromPlaylist, recordListeningHistory, stopCurrentSongTracking, getPersonalizedSongs } = (0,_hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_13__.useSupabaseData)(user);\n    const { queue, addToQueue, removeFromQueue, getNextSongFromQueue, clearQueue, hasQueue } = (0,_hooks_useQueue__WEBPACK_IMPORTED_MODULE_14__.useQueue)();\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"home\");\n    const [currentPage, setCurrentPage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"main\");\n    const [currentSong, setCurrentSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isPlayerMaximized, setIsPlayerMaximized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCreatePlaylistModal, setShowCreatePlaylistModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showAddToPlaylistModal, setShowAddToPlaylistModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedSongForPlaylist, setSelectedSongForPlaylist] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hasSetLastPlayedSong, setHasSetLastPlayedSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastPlayedSongDismissed, setLastPlayedSongDismissed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { isDarkMode, toggleTheme } = (0,_components_ThemeContext__WEBPACK_IMPORTED_MODULE_15__.useTheme)();\n    const [displayCount, setDisplayCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(15);\n    const [imageUrls, setImageUrls] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [audioUrl, setAudioUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [volume, setVolume] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.75); // default 75%\n    const [isSeeking, setIsSeeking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [pendingSeekTime, setPendingSeekTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isExternallySeeking, setIsExternallySeeking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [recommendedQueue, setRecommendedQueue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [playedSongs, setPlayedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [personalizedList, setPersonalizedList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentSongIndex, setCurrentSongIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [listenedSongs, setListenedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const loadMoreSongs = ()=>{\n        setDisplayCount((prev)=>prev + 15);\n    };\n    const displayedSongs = songs.slice(0, displayCount);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadAudio = async ()=>{\n            if (currentSong === null || currentSong === void 0 ? void 0 : currentSong.file_id) {\n                const url = \"/api/audio-proxy?fileid=\".concat(currentSong.file_id);\n                setAudioUrl(url);\n                setDuration(0);\n                setCurrentTime(0);\n                setPendingSeekTime(null);\n            }\n        };\n        loadAudio();\n    }, [\n        currentSong === null || currentSong === void 0 ? void 0 : currentSong.file_id\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchRecommendations = async ()=>{\n            if (user && currentSong) {\n                const recommendations = await getPersonalizedSongs(user.id, currentSong, listenedSongs);\n                console.log(\"\\uD83C\\uDFA7 Updated Recommendations:\", recommendations);\n            }\n        };\n        fetchRecommendations();\n    }, [\n        user,\n        currentSong,\n        listenedSongs\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (audioRef.current) {\n            audioRef.current.volume = volume;\n        }\n    }, [\n        volume\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const audio = audioRef.current;\n        if (!audio) return;\n        if (!isNaN(audio.duration) && isPlaying) {\n            // Duration is valid, safe to play\n            audio.play().catch((e)=>{\n                console.error(\"Playback error:\", e);\n            });\n        } else if (!isPlaying) {\n            audio.pause();\n        }\n    }, [\n        isPlaying\n    ]);\n    // Load images for currently displayed songs\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchImages = async ()=>{\n            const newUrls = {};\n            // Songs from the main feed\n            const songsToLoad = songs.slice(0, displayCount);\n            for (const song of songsToLoad){\n                if (!imageUrls[song.id]) {\n                    newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                }\n            }\n            // Songs from playlists\n            for (const playlist of playlists){\n                for (const song of playlist.songs){\n                    if (!imageUrls[song.id]) {\n                        newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                    }\n                }\n            }\n            // Liked songs\n            for (const song of likedSongs){\n                if (!imageUrls[song.id]) {\n                    newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                }\n            }\n            // Apply if new URLs found\n            if (Object.keys(newUrls).length > 0) {\n                setImageUrls((prev)=>({\n                        ...prev,\n                        ...newUrls\n                    }));\n            }\n        };\n        fetchImages();\n    }, [\n        displayCount,\n        songs,\n        playlists,\n        likedSongs\n    ]);\n    // Set last played song as current song when data loads (only once and if not dismissed)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadLastPlayedImage = async ()=>{\n            if (user && lastPlayedSong && !hasSetLastPlayedSong && !lastPlayedSongDismissed) {\n                const initialRecs = await getPersonalizedSongs(user.id, lastPlayedSong, listenedSongs);\n                const filtered = initialRecs.filter((song)=>!playedSongs.has(song.file_id));\n                setPersonalizedList([\n                    lastPlayedSong,\n                    ...filtered.slice(0, 5)\n                ]);\n                setCurrentSong(lastPlayedSong);\n                setHasSetLastPlayedSong(true);\n                // Add to listened songs and log\n                setListenedSongs((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(lastPlayedSong.id);\n                    console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                    return newSet;\n                });\n                if (!imageUrls[lastPlayedSong.img_id]) {\n                    const url = \"/api/image-proxy?fileid=\".concat(lastPlayedSong.img_id);\n                    setImageUrls((prev)=>({\n                            ...prev,\n                            [lastPlayedSong.img_id]: url\n                        }));\n                }\n            }\n        };\n        loadLastPlayedImage();\n    }, [\n        lastPlayedSong,\n        currentSong,\n        hasSetLastPlayedSong,\n        lastPlayedSongDismissed,\n        imageUrls\n    ]);\n    const handleSongPlay = async (song)=>{\n        setCurrentSong(song);\n        setIsPlaying(true);\n        setLastPlayedSongDismissed(false);\n        recordListeningHistory(song.id);\n        // Add to listened songs and log\n        setListenedSongs((prev)=>{\n            const newSet = new Set(prev);\n            newSet.add(song.id);\n            console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n            return newSet;\n        });\n        setPlayedSongs((prev)=>{\n            const updated = new Set(prev);\n            updated.add(String(song.file_id));\n            return updated;\n        });\n        if (user) {\n            const recs = await getPersonalizedSongs(user.id, song, listenedSongs);\n            const filtered = recs.filter((s)=>!playedSongs.has(s.file_id));\n            const newPersonalizedList = [\n                song,\n                ...filtered.slice(0, 9)\n            ]; // Get more songs\n            setPersonalizedList(newPersonalizedList);\n            setCurrentSongIndex(0); // Reset to first song\n        }\n    };\n    const handleAddToQueue = (song)=>{\n        addToQueue(song);\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_16__.toast.success('Added \"'.concat(song.name, '\" to queue'));\n    };\n    const togglePlay = ()=>{\n        setIsPlaying(!isPlaying);\n    };\n    const togglePlayerSize = ()=>{\n        setIsPlayerMaximized(!isPlayerMaximized);\n    };\n    const closePlayer = async ()=>{\n        // Stop tracking current song before closing\n        await stopCurrentSongTracking();\n        setCurrentSong(null);\n        setIsPlaying(false);\n        setIsPlayerMaximized(false);\n        // Mark last played song as dismissed so it won't auto-load again\n        setLastPlayedSongDismissed(true);\n    };\n    const handleToggleLike = (songId)=>{\n        toggleLike(songId);\n        // Update current song state if it's the one being liked/unliked\n        if (currentSong && currentSong.id === songId) {\n            setCurrentSong((prev)=>prev ? {\n                    ...prev,\n                    isLiked: !prev.isLiked\n                } : null);\n        }\n    };\n    const handlePrevious = ()=>{\n        if (!currentSong) return;\n        // Check if there's a previous song in the personalized list\n        if (currentSongIndex > 0) {\n            const prevIndex = currentSongIndex - 1;\n            const prevSong = personalizedList[prevIndex];\n            if (prevSong) {\n                setCurrentSong(prevSong);\n                setCurrentSongIndex(prevIndex);\n                setIsPlaying(true);\n                setLastPlayedSongDismissed(false);\n                recordListeningHistory(prevSong.id);\n                // Add to listened songs and log\n                setListenedSongs((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(prevSong.id);\n                    console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                    return newSet;\n                });\n                setPlayedSongs((prev)=>{\n                    const updated = new Set(prev);\n                    updated.add(String(prevSong.file_id));\n                    return updated;\n                });\n                // Preload image\n                if (!imageUrls[prevSong.img_id]) {\n                    const newUrl = \"/api/image-proxy?fileid=\".concat(prevSong.img_id);\n                    setImageUrls((prev)=>({\n                            ...prev,\n                            [prevSong.img_id]: newUrl\n                        }));\n                }\n            }\n        } else {\n            // If at the beginning, just restart current song\n            setCurrentTime(0);\n            setIsPlaying(true);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentSong) return;\n        const currentIndex = songs.findIndex((song)=>song.id === currentSong.id);\n        const nextIndex = currentIndex < songs.length - 1 ? currentIndex + 1 : 0;\n        const nextSong = songs[nextIndex];\n        // Preload next song image if not in cache\n        if (nextSong && !imageUrls[nextSong.img_id]) {\n            const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong.img_id);\n            setImageUrls((prev)=>({\n                    ...prev,\n                    [nextSong.img_id]: newUrl\n                }));\n        }\n    }, [\n        currentSong,\n        songs\n    ]);\n    const handleLoadedMetadata = async ()=>{\n        const audio = audioRef.current;\n        if (!audio) return;\n        const loadedDuration = audio.duration;\n        if (!isNaN(loadedDuration) && isFinite(loadedDuration)) {\n            setDuration(loadedDuration);\n            if (pendingSeekTime !== null) {\n                audio.currentTime = pendingSeekTime;\n                setCurrentTime(pendingSeekTime);\n                setPendingSeekTime(null);\n            } else {\n                setCurrentTime(audio.currentTime);\n            }\n            try {\n                if (isPlaying) {\n                    await audio.play();\n                }\n            } catch (err) {\n                console.error(\"Auto-play error after metadata load:\", err);\n            }\n        } else {\n            // Retry metadata read\n            setTimeout(handleLoadedMetadata, 100);\n        }\n    };\n    const handleNext = async ()=>{\n        if (!currentSong) return;\n        // Check if there's a song in the queue first\n        const nextQueueSong = getNextSongFromQueue();\n        if (nextQueueSong) {\n            setCurrentSong(nextQueueSong);\n            setIsPlaying(true);\n            setLastPlayedSongDismissed(false);\n            recordListeningHistory(nextQueueSong.id);\n            // Add to listened songs and log\n            setListenedSongs((prev)=>{\n                const newSet = new Set(prev);\n                newSet.add(nextQueueSong.id);\n                console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                return newSet;\n            });\n            // Update personalized list with the queue song\n            if (user) {\n                const recs = await getPersonalizedSongs(user.id, nextQueueSong, listenedSongs);\n                const filtered = recs.filter((s)=>!playedSongs.has(s.file_id));\n                const newPersonalizedList = [\n                    nextQueueSong,\n                    ...filtered.slice(0, 9)\n                ];\n                setPersonalizedList(newPersonalizedList);\n                setCurrentSongIndex(0);\n            }\n            // Preload image\n            if (!imageUrls[nextQueueSong.img_id]) {\n                const newUrl = \"/api/image-proxy?fileid=\".concat(nextQueueSong.img_id);\n                setImageUrls((prev)=>({\n                        ...prev,\n                        [nextQueueSong.img_id]: newUrl\n                    }));\n            }\n            return;\n        }\n        // If no queue, proceed with personalized list\n        const nextIndex = currentSongIndex + 1;\n        if (nextIndex < personalizedList.length) {\n            const nextSong = personalizedList[nextIndex];\n            setCurrentSong(nextSong);\n            setCurrentSongIndex(nextIndex);\n            setIsPlaying(true);\n            setLastPlayedSongDismissed(false);\n            recordListeningHistory(nextSong.id);\n            // Add to listened songs and log\n            setListenedSongs((prev)=>{\n                const newSet = new Set(prev);\n                newSet.add(nextSong.id);\n                console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                return newSet;\n            });\n            setPlayedSongs((prev)=>{\n                const updated = new Set(prev);\n                updated.add(String(nextSong.file_id));\n                return updated;\n            });\n            // Preload image\n            if (!imageUrls[nextSong.img_id]) {\n                const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong.img_id);\n                setImageUrls((prev)=>({\n                        ...prev,\n                        [nextSong.img_id]: newUrl\n                    }));\n            }\n            // If nearing end of list, fetch more recommendations\n            if (nextIndex >= personalizedList.length - 3 && user) {\n                const newRecs = await getPersonalizedSongs(user.id, nextSong, listenedSongs);\n                const filtered = newRecs.filter((song)=>!playedSongs.has(song.file_id));\n                if (filtered.length > 0) {\n                    setPersonalizedList((prev)=>[\n                            ...prev,\n                            ...filtered.slice(0, 6)\n                        ]);\n                }\n            }\n        } else {\n            // If we've reached the end of personalized list, get new recommendations\n            if (user && currentSong) {\n                const newRecs = await getPersonalizedSongs(user.id, currentSong, listenedSongs);\n                const filtered = newRecs.filter((song)=>!playedSongs.has(song.file_id));\n                if (filtered.length > 0) {\n                    const nextSong = filtered[0];\n                    setCurrentSong(nextSong);\n                    setIsPlaying(true);\n                    setLastPlayedSongDismissed(false);\n                    recordListeningHistory(nextSong.id);\n                    // Add to listened songs and log\n                    setListenedSongs((prev)=>{\n                        const newSet = new Set(prev);\n                        newSet.add(nextSong.id);\n                        console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                        return newSet;\n                    });\n                    // Create new personalized list starting with this song\n                    const newPersonalizedList = [\n                        nextSong,\n                        ...filtered.slice(1, 10)\n                    ];\n                    setPersonalizedList(newPersonalizedList);\n                    setCurrentSongIndex(0);\n                    setPlayedSongs((prev)=>{\n                        const updated = new Set(prev);\n                        updated.add(String(nextSong.file_id));\n                        return updated;\n                    });\n                    // Preload image\n                    if (!imageUrls[nextSong.img_id]) {\n                        const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong.img_id);\n                        setImageUrls((prev)=>({\n                                ...prev,\n                                [nextSong.img_id]: newUrl\n                            }));\n                    }\n                }\n            }\n        }\n    };\n    const formatNumber = (num)=>{\n        if (num >= 1000000) {\n            return (num / 1000000).toFixed(1) + \"M\";\n        } else if (num >= 1000) {\n            return (num / 1000).toFixed(1) + \"K\";\n        }\n        return num.toString();\n    };\n    const handleAddToPlaylist = (song)=>{\n        setSelectedSongForPlaylist(song);\n        setShowAddToPlaylistModal(true);\n    };\n    const handleSongEnd = async ()=>{\n        // When a song ends, automatically play the next one\n        await handleNext();\n    };\n    const renderContent = ()=>{\n        if (currentPage === \"playlists\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PlaylistsPage__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                playlists: playlists,\n                onBack: ()=>setCurrentPage(\"main\"),\n                onSongPlay: handleSongPlay,\n                onAddToQueue: handleAddToQueue,\n                onCreatePlaylist: ()=>setShowCreatePlaylistModal(true),\n                onDeletePlaylist: deletePlaylist,\n                onRenamePlaylist: renamePlaylist,\n                onRemoveSongFromPlaylist: removeSongFromPlaylist,\n                imageUrls: imageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 498,\n                columnNumber: 9\n            }, this);\n        }\n        if (currentPage === \"liked\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LikedSongsPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                songs: likedSongs,\n                onBack: ()=>setCurrentPage(\"main\"),\n                onSongPlay: handleSongPlay,\n                onAddToQueue: handleAddToQueue,\n                imageUrls: imageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 513,\n                columnNumber: 14\n            }, this);\n        }\n        switch(activeTab){\n            case \"home\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_HomePage__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    songs: displayedSongs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    onLoadMore: loadMoreSongs,\n                    hasMoreSongs: displayCount < songs.length\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 518,\n                    columnNumber: 16\n                }, this);\n            case \"search\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchPage__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    songs: songs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    setImageUrls: setImageUrls\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 529,\n                    columnNumber: 16\n                }, this);\n            case \"settings\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    onPlaylistsClick: ()=>setCurrentPage(\"playlists\"),\n                    onLikedClick: ()=>setCurrentPage(\"liked\")\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 539,\n                    columnNumber: 16\n                }, this);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_HomePage__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    songs: displayedSongs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    onLoadMore: loadMoreSongs,\n                    hasMoreSongs: displayCount < songs.length\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 541,\n                    columnNumber: 16\n                }, this);\n        }\n    };\n    const themeClasses = isDarkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\";\n    const setCurrentTimeState = setCurrentTime;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen \".concat(themeClasses, \" relative overflow-hidden\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"transition-all duration-300 \".concat(currentSong ? \"pb-36\" : \"pb-20\"),\n                children: renderContent()\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 563,\n                columnNumber: 9\n            }, this),\n            currentPage === \"main\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed bottom-0 left-0 right-0 \".concat(isDarkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-200\", \" border-t z-30\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-around py-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"home\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"home\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 577,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Home\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 578,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 571,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"search\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"search\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 586,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Search\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 587,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 580,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"settings\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"settings\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 595,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Settings\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 596,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 589,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 570,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 569,\n                columnNumber: 11\n            }, this),\n            currentSong && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: !isPlayerMaximized ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MinimizedPlayer__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    song: currentSong,\n                    isPlaying: isPlaying,\n                    imageUrl: imageUrls[currentSong.img_id],\n                    onTogglePlay: togglePlay,\n                    onMaximize: togglePlayerSize,\n                    onPrevious: handlePrevious,\n                    onNext: handleNext,\n                    onClose: closePlayer,\n                    onToggleLike: ()=>handleToggleLike(currentSong.id),\n                    formatNumber: formatNumber,\n                    currentTime: currentTime,\n                    duration: duration\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 606,\n                    columnNumber: 15\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MaximizedPlayer__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    song: currentSong,\n                    isPlaying: isPlaying,\n                    imageUrl: imageUrls[currentSong.img_id],\n                    onTogglePlay: togglePlay,\n                    onMinimize: togglePlayerSize,\n                    onPrevious: handlePrevious,\n                    onNext: handleNext,\n                    onToggleLike: ()=>handleToggleLike(currentSong.id),\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: ()=>handleAddToPlaylist(currentSong),\n                    currentTime: currentTime,\n                    duration: duration,\n                    setCurrentTime: (seekTime)=>{\n                        if (audioRef.current && !isNaN(audioRef.current.duration)) {\n                            setIsExternallySeeking(true);\n                            audioRef.current.currentTime = seekTime;\n                            setCurrentTimeState(seekTime);\n                            setTimeout(()=>setIsExternallySeeking(false), 200);\n                        } else {\n                            setPendingSeekTime(seekTime); // Will apply onLoadedMetadata\n                        }\n                    },\n                    volume: volume,\n                    setVolume: setVolume,\n                    isSeeking: isSeeking,\n                    setIsSeeking: setIsSeeking,\n                    queue: queue,\n                    onRemoveFromQueue: removeFromQueue,\n                    onSongPlay: handleSongPlay,\n                    imageUrls: imageUrls\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 621,\n                    columnNumber: 15\n                }, this)\n            }, void 0, false),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CreatePlaylistModal__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                isOpen: showCreatePlaylistModal,\n                onClose: ()=>setShowCreatePlaylistModal(false),\n                onCreatePlaylist: createPlaylist\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 662,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AddToPlaylistModal__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                isOpen: showAddToPlaylistModal,\n                onClose: ()=>{\n                    setShowAddToPlaylistModal(false);\n                    setSelectedSongForPlaylist(null);\n                },\n                song: selectedSongForPlaylist,\n                playlists: playlists,\n                onAddToPlaylist: addSongToPlaylist,\n                onCreatePlaylist: ()=>{\n                    setShowAddToPlaylistModal(false);\n                    setShowCreatePlaylistModal(true);\n                },\n                imageUrls: imageUrls,\n                setImageUrls: setImageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 668,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                src: audioUrl !== null && audioUrl !== void 0 ? audioUrl : undefined,\n                onEnded: handleSongEnd,\n                onTimeUpdate: ()=>{\n                    if (audioRef.current && !isSeeking && !isExternallySeeking) {\n                        const current = audioRef.current.currentTime;\n                        // Only update state if the difference is significant\n                        if (Math.abs(currentTime - current) > 0.25) {\n                            setCurrentTime(current);\n                        }\n                    }\n                },\n                onLoadedMetadata: handleLoadedMetadata,\n                onVolumeChange: ()=>{\n                    if (audioRef.current) {\n                        setVolume(audioRef.current.volume);\n                    }\n                },\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 684,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/app/page.tsx\",\n        lineNumber: 561,\n        columnNumber: 7\n    }, this);\n}\n_s(MusicPlayerContent, \"40w1oRJm1GKLKy3zlvTCJnrWKZc=\", false, function() {\n    return [\n        _hooks_useAuth__WEBPACK_IMPORTED_MODULE_12__.useAuth,\n        _hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_13__.useSupabaseData,\n        _hooks_useQueue__WEBPACK_IMPORTED_MODULE_14__.useQueue,\n        _components_ThemeContext__WEBPACK_IMPORTED_MODULE_15__.useTheme\n    ];\n});\n_c = MusicPlayerContent;\nfunction MusicPlayerApp() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AuthWrapper__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_16__.Toaster, {\n                position: \"bottom-center\"\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 715,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MusicPlayerContent, {}, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 716,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/app/page.tsx\",\n        lineNumber: 714,\n        columnNumber: 5\n    }, this);\n}\n_c1 = MusicPlayerApp;\nvar _c, _c1;\n$RefreshReg$(_c, \"MusicPlayerContent\");\n$RefreshReg$(_c1, \"MusicPlayerApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ })

});